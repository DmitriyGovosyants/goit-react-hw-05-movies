{"version":3,"file":"static/js/186.f7d42a9e.chunk.js","mappings":"8NAkDA,UA9CgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA4BF,EAAAA,EAAAA,WAAS,GAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAK,mCAAG,gHAIAC,EAAAA,EAAAA,IAAkBJ,GAJlB,gBAGAK,EAHA,EAGRC,KAAQD,QAGVV,EAAWU,GACXR,GAAU,GAPA,gDASVE,EAAS,KAAEQ,SATD,yDAAH,qDAYXJ,MACC,CAACH,IAEJ,IAAMQ,EAA+B,IAAnBd,EAAQe,QAAgBb,EAE1C,OACE,gCACGE,IAAS,uBAAIA,IACbU,IAAa,oEACbd,EAAQe,OAAS,IAChB,wBACGf,EAAQgB,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC1B,OACE,2BACE,wBACE,oCAAYD,QAEd,uBAAIC,MAJGF,a,0MClCjBG,EAAU,mCAChBC,IAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAa,mCAAG,8FACdD,IAAAA,IAAA,qCAAwCD,IAD1B,mFAAH,qDAIbG,EAAiB,mCAAG,WAAON,GAAP,iFAClBI,IAAAA,IAAA,gBAAmBJ,EAAnB,oBAAiCG,IADf,mFAAH,sDAIjBI,EAAiB,mCAAG,WAAOP,GAAP,iFAClBI,IAAAA,IAAA,gBAAmBJ,EAAnB,4BAAyCG,IADvB,mFAAH,sDAIjBV,EAAiB,mCAAG,WAAOO,GAAP,iFAClBI,IAAAA,IAAA,gBAAmBJ,EAAnB,4BAAyCG,IADvB,mFAAH,sDAIjBK,EAAiB,mCAAG,WAAOC,GAAP,iFAClBL,IAAAA,IAAA,+BAAkCD,EAAlC,kBAAmDM,IADjC,mFAAH","sources":["components/Reviews/Reviews.jsx","services/filmsApi.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchMovieReviews } from 'services/filmsApi';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [isLoad, setIsLoad] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const {\n          data: { results },\n        } = await fetchMovieReviews(movieId);\n\n        setReviews(results);\n        setIsLoad(true);\n      } catch (e) {\n        setError(e.message);\n      }\n    };\n    fetch();\n  }, [movieId]);\n\n  const noReviews = reviews.length === 0 && isLoad;\n\n  return (\n    <>\n      {error && <p>{error}</p>}\n      {noReviews && <p>We don`t have any reviews for this movie</p>}\n      {reviews.length > 0 && (\n        <ul>\n          {reviews.map(({ id, author, content }) => {\n            return (\n              <li key={id}>\n                <p>\n                  <b>Author: {author}</b>\n                </p>\n                <p>{content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = 'bfe20768c956c05046c7d088e4b361cd';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrending = async () => {\n  return await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n}\n\nexport const fetchMovieDetails = async (id) => {\n  return await axios.get(`movie/${id}?api_key=${API_KEY}`);\n}\n\nexport const fetchMovieCredits = async (id) => {\n  return await axios.get(`movie/${id}/credits?api_key=${API_KEY}`);\n}\n\nexport const fetchMovieReviews = async (id) => {\n  return await axios.get(`movie/${id}/reviews?api_key=${API_KEY}`);\n}\n\nexport const fetchMoviesByName = async (name) => {\n  return await axios.get(`search/movie?api_key=${API_KEY}&query=${name}`);\n}"],"names":["useState","reviews","setReviews","isLoad","setIsLoad","error","setError","movieId","useParams","useEffect","fetch","fetchMovieReviews","results","data","message","noReviews","length","map","id","author","content","API_KEY","axios","fetchTrending","fetchMovieDetails","fetchMovieCredits","fetchMoviesByName","name"],"sourceRoot":""}